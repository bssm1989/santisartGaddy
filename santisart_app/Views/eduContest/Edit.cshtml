@model santisart_app.Models.studentEduContest2561
<style>
    .ui-autocomplete {
        position: absolute;
        z-index: 1000;
        cursor: pointer;
        padding: 0;
        margin-top: 2px;
        list-style: none;
        background-color: #ffffff;
        border: 1px solid #ccc -webkit-border-radius: 5px;
        -moz-border-radius: 5px;
        border-radius: 5px;
        -webkit-box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);
        -moz-box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);
        box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);
    }

        .ui-autocomplete > li {
            padding: 3px 20px;
        }

            .ui-autocomplete > li.ui-state-focus {
                background-color: #DDD;
            }

    .ui-helper-hidden-accessible {
        display: none;
    } 
    
</style>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>แก้ไขรายละเอียด</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Student_id)

        <div class="form-group">
            @Html.LabelFor(model => model.Student_title, htmlAttributes: new { @class = "control-label  col-md-2 col-sm-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Student_title, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.Student_title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Student_name, htmlAttributes: new { @class = "control-label  col-md-2 col-sm-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Student_name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Student_name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Student_lname, htmlAttributes: new { @class = "control-label  col-md-2 col-sm-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Student_lname, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.Student_lname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Class_name_id, htmlAttributes: new { @class = "control-label  col-md-2 col-sm-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Class_name_id, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.Class_name_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Class_room, htmlAttributes: new { @class = "control-label  col-md-2 col-sm-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Class_room, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.Class_room, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Class_year_index, htmlAttributes: new { @class = "control-label  col-md-2 col-sm-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Class_year_index, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.Class_year_index, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Teacher_id, htmlAttributes: new { @class = "control-label  col-md-2 col-sm-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Teacher_id, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.Teacher_id, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.HiddenFor(model => model.Classes_id)

        @Html.HiddenFor(model => model.TypeContest_id)

       

        <div class="form-group">
            @Html.LabelFor(model => model.Staff_id, htmlAttributes: new { @class = "control-label  col-md-2 col-sm-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Staff_id, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.Staff_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Timestamp, htmlAttributes: new { @class = "control-label  col-md-2 col-sm-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Timestamp, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.Timestamp, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.group, htmlAttributes: new { @class = "control-label  col-md-2 col-sm-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.group, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.group, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NameContest, htmlAttributes: new { @class = "control-label  col-md-2 col-sm-2" })
            <div class="col-md-10">
                <select class="form-control" id="NameContest" name="NameContest">@*<option value="@Model.EduContest_id" selected>@Model.NameContest</option>*@</select>
                @Html.ValidationMessageFor(model => model.NameContest, "", new { @class = "text-danger" })
            </div>
        </div>
        @{ 
            var resultlist =new[] { "อันดับ 1", "อันดับ 2", "อันดับ 3", "ชมเชย" };
            var selected = "";
        }
        <div class="form-group">
            @Html.LabelFor(model => model.result, htmlAttributes: new { @class = "control-label  col-md-2 col-sm-2" })
            <div class="col-md-10">
                <select class="form-control" id="result" name="result">
                    @foreach (var item in resultlist)
                    {if (item == Model.result)
                    {
                        selected = "selected";
                    }
                    else { selected = ""; }
                    
                    <option value="@item" @selected>@item</option>

                    }
                @Html.ValidationMessageFor(model => model.result, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.HiddenFor(model => model.EduContest_id)

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>




<script type="text/javascript" language="javascript">
    $(document).ready(function () {
     

        $.ui.autocomplete.prototype._renderItem = function (table, item) {
            return $("<li></li>")
                .data("item.autocomplete", item)
                .append("<div id='ui-id-52' tabindex='-1' class='ui-menu-item-wrapper'>" + item.Student_name + " " + item.Student_lname+" " + item.Class_name_id +"/"+ item.Class_room +"</div>")
                .appendTo(table);
        };
        $('#Student_name').autocomplete({
            source: 'getcountries',
            select: function (event, ui) {
                //set tagids to save
                $("#CountryId").val(ui.item.id);
                $("#Student_id").val(ui.item.Student_id);
                $("#Student_title").val(ui.item.Student_title);
                $("#Student_lname").val(ui.item.Student_lname);
                $("#Class_name_id").val(ui.item.Class_name_id);
                $("#Class_room").val(ui.item.Class_room);
                $("#Class_id").val(ui.item.Classes_id);

                //Tags for display
                this.value = ui.item.Student_name;
                return false;
            }
        });
        $.ajax({
            type: "GET",
            url: "getDepartment",
            data: "{}",
            success: function (data) {
                var s = ''; 
                var selected="@Model.NameContest";
                for (var i = 0; i < data.length; i++) {
                    if (parseInt( data[i].DepartmentID) ==@Model.TypeContest_id) {
                        selected = "selected";
                    } else {
                        selected = '';
                    }
                    s += '<option value="' + data[i].DepartmentID + '" ' + selected+'>' + data[i].DepartmentName + '</option>';
                }
                $("#NameContest").html(s);
            },

        });  
    });
</script>
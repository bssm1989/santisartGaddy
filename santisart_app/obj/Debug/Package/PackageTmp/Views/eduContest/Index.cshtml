@model IEnumerable<santisart_app.Models.Enroll_EduContest>

@{
    ViewBag.Title = "Index";
}
<style>
    tr.group,
    tr.group:hover {
        background-color: #ddd !important;
    }
</style>
<h2>Index</h2>

<p>
    @Html.ActionLink("เพิ่มรายชื่อ", "Create", null, new { @class = "btn btn-primary btn-large" })
</p>
<div class="row">
    <div class="table-responsive">
        <table id="datatable1" class="table table-striped jambo_table bulk_action hover display nowrap" role="grid" aria-describedby="datatable_info">
            <thead>

                <tr>
                    <th class="col-lg-1 col-sm-1 col-md-1">
                        ลำดับ
                    </th>
                    <th>
                        ชื่อ - นามสกุล
                    </th>

                    <th class="col-lg-2 col-sm-2 col-md-2">
                        ชั้น
                    </th>
                    <th class="col-lg-2 col-sm-2 col-md-2">
                        @*@Html.DisplayNameFor(model => model.NameContest)*@
                        กิจกรรม
                    </th>


                    <th class="col-lg-1 col-sm-1 col-md-1">
                        @*@Html.DisplayNameFor(model => model.group)*@
                        กลุ่ม
                    </th>
                    <th>
                        ผลการแข่งขัน
                    </th>
                    <th>
                        วันแข่งขัน
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @{var numIndex = 0; }
                @foreach (var item in Model)
                {
                    item.Student.Student_title = item.Student.Student_title.Replace("ด.ช.", "เด็กชาย").Replace("ด.ญ.", "เด็กหญิง");
                    numIndex++;
                    <tr>
                        <td>
                            <span>@numIndex</span>
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Student.Student_title) @Html.DisplayFor(modelItem => item.Student.Student_name)  @Html.DisplayFor(modelItem => item.Student.Student_lname)
                        </td>

                        <td>
                            @*@Html.DisplayFor(modelItem => item.Studen..Class_name_id)/@Html.DisplayFor(modelItem => item.Class_room)*@
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ContestEducationSchool.NameContest)
                        </td>


                        <td>
                            @Html.DisplayFor(modelItem => item.ContestEducationSchool.group)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.result)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ContestEducationSchool.Day_contest)
                        </td>
                        <td>
                            @Html.ActionLink("Edit", "Edit", new { item.EduContest_id }, new { @class = "btn btn-primary btn-xs" })
                            @Html.ActionLink("รายละเอียด", "Details", new { item.EduContest_id }, new { @class = "btn btn-info btn-xs" })
                            @Html.ActionLink("ลบ", "Delete", new { EduContestId = item.EduContest_id }, new { @class = "btn btn-danger btn-xs" })
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
<script>
    $(document).ready(function () {
        //var table = $('#datatable1').DataTable( {
        //rowReorder: {
        //    selector: 'td:nth-child(2)'
        //},
        //responsive: true
        //});

        var groupColumn = 3;
        var table = $('#datatable1').DataTable({
            "columnDefs": [
                { "visible": false, "targets": groupColumn }
            ],
            "order": [[groupColumn, 'asc']],
            "displayLength": 100,
            "drawCallback": function (settings) {
                var api = this.api();
                var rows = api.rows({ page: 'current' }).nodes();
                var last = null;

                api.column(groupColumn, { page: 'current' }).data().each(function (group, i) {
                    if (last !== group) {
                        $(rows).eq(i).before(
                            '<tr class="group"><td colspan="7"><strong>' + group + '</strong></td></tr>'
                        );

                        last = group;
                    }
                });
            }
        });

        // Order by the grouping
        $('#datatable1 tbody').on('click', 'tr.group', function () {
            var currentOrder = table.order()[0];
            if (currentOrder[0] === groupColumn && currentOrder[1] === 'asc') {
                table.order([groupColumn, 'desc']).draw();
            }
            else {
                table.order([groupColumn, 'asc']).draw();
            }
        });

    });

</script>